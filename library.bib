Automatically generated by Mendeley Desktop 1.19.4
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Preferences -> BibTeX in Mendeley Desktop

@article{JohnsonMLIS2017,
abstract = {Trello, a cloud-based tool that uses the Kanban method of project management. With Trello, users can visually organize projects into boards, divide projects into groups, and subdivide groups into tasks.},
author = {{Johnson, MLIS}, Heather A.},
doi = {10.5195/jmla.2016.49},
issn = {1536-5050},
journal = {Journal of the Medical Library Association},
month = {apr},
number = {2},
pages = {209},
publisher = {Medical Library Association},
title = {{Trello}},
url = {http://jmla.pitt.edu/ojs/jmla/article/view/49},
volume = {105},
year = {2017}
}
@article{Deleglise2005,
abstract = {This paper presents the system used by the LIUM to participate in ESTER, the french broadcast news evaluation campaign. This system is based on the CMU Sphinx 3.3 (fast) decoder. Some tools are presented which have been added on different steps of the Sphinx recognition process: segmentation, acoustic model adaptation, word-lattice rescoring. Several experiments have been conducted on studying the effects of the signal segmentation on the recognition process, on injecting automatically transcribed data into training corpora, or on testing different approaches for acoustic model adaptation. The results are presented in this paper. With very few modiﬁcations and a simple MAP acoustic model estimation, Sphinx3.3 decoder reached a word error rate of 28.2{\%}. The entire system developed by LIUM obtained 23.6{\%} as ofﬁcial word error rate for the ESTER evaluation, and 23.4{\%} as result of an unsubmited system.},
author = {Del{\'{e}}glise, Paul and Esteve, Y and Meignier, Sylvain and Merlin, Teva},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Del{\'{e}}glise et al. - 2005 - The LIUM speech transcription system a CMU Sphinx III-based system for french broadcast news The LIUM speech.pdf:pdf},
journal = {Interspeech},
pages = {3--6},
title = {{The LIUM speech transcription system: a CMU Sphinx III-based system for French broadcast news.}},
url = {https://hal.archives-ouvertes.fr/hal-01434282 http://lium3.univ-lemans.fr/lium{\_}d5/sites/default/files/LIUM{\_}Interspeech05.pdf},
year = {2005}
}
@article{Fine1998,
abstract = {We introduce, analyze and demonstrate a recursive hierarchical generalization of the widely used hidden Markov models, which we name Hierarchical Hidden Markov Models (HHMM). Our model is motivated by the complex multi-scale structure which appears in many natural sequences, particularly in language, handwriting and speech. We seek a systematic unsupervised approach to the modeling of such structures. By extending the standard Baum-Welch (forward-backward) algorithm, we derive an efficient procedure for estimating the model parameters from unlabeled data. We then use the trained model for automatic hierarchical parsing of observation sequences. We describe two applications of our model and its parameter estimation procedure. In the first application we show how to construct hierarchical models of natural English text. In these models different levels of the hierarchy correspond to structures on different length scales in the text. In the second application we demonstrate how HHMMs can be used to automatically identify repeated strokes that represent combination of letters in cursive handwriting.},
author = {Fine, S. and Singer, Y. and Tishby, N.},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Fine, Tishby - 1998 - The Hierarchical Hidden Markov Model Analysis and Applications.pdf:pdf},
journal = {Machine Learning},
keywords = {cursive handwriting,hidden variable models,statistical models,temporal pattern recognition},
pages = {41--62},
title = {{The Hierarchical Hidden Markov Model: Analysis and Applications}},
url = {https://link.springer.com/content/pdf/10.1023{\%}2FA{\%}3A1007469218079.pdf http://www.springerlink.com/index/h7630r4u78j0xhu1.pdf},
volume = {32},
year = {1998}
}
@article{Kepuska2017,
abstract = {The idea of this paper is to design a tool that will be used to test and compare commercial speech recognition systems, such as Microsoft Speech API and Google Speech API, with open-source speech recognition systems such as Sphinx-4. The best way to compare automatic speech recognition systems in different environments is by using some audio recordings that were selected from different sources and calculating the word error rate (WER). Although the WER of the three aforementioned systems were acceptable, it was observed that the Google API is superior.},
author = {K{\"{e}}puska, Veton},
doi = {10.9790/9622-0703022024},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/K{\"{e}}puska - 2017 - Comparing Speech Recognition Systems (Microsoft API, Google API And CMU Sphinx).pdf:pdf},
issn = {22489622},
journal = {International Journal of Engineering Research and Applications},
month = {mar},
number = {03},
pages = {20--24},
publisher = {IOSR Journals},
title = {{Comparing Speech Recognition Systems (Microsoft API, Google API And CMU Sphinx)}},
volume = {07},
year = {2017}
}
@misc{News2010,
abstract = {SoX is the Swiss Army Knife of sound processing utilities. It can convert audio files to other popular audio file types and also apply sound effects and ...},
author = {Cbagwell and Robs and Uklauer},
booktitle = {sourceforge},
pages = {1--2},
title = {{SoX - Sound eXchange}},
url = {http://sox.sourceforge.net/},
urldate = {2019-06-10},
year = {2015}
}
@article{Grossmann2010,
abstract = {In human adults, voices are processed in specialized brain regions in superior temporal cortices. We examined the development of this cortical organization during infancy by using near-infrared spectroscopy. In experiment 1, 7-month-olds but not 4-month-olds showed increased responses in left and right superior temporal cortex to the human voice when compared to nonvocal sounds, suggesting that voice-sensitive brain systems emerge between 4 and 7 months of age. In experiment 2, 7-month-old infants listened to words spoken with neutral, happy, or angry prosody. Hearing emotional prosody resulted in increased responses in a voice-sensitive region in the right hemisphere. Moreover, a region in right inferior frontal cortex taken to serve evaluative functions in the adult brain showed particular sensitivity to happy prosody. The pattern of findings suggests that temporal regions specialize in processing voices very early in development and that, already in infancy, emotions differentially modulate voice processing in the right hemisphere. {\textcopyright} 2010 Elsevier Inc.},
author = {Grossmann, Tobias and Oberecker, Regine and Koch, Stefan Paul and Friederici, Angela D.},
doi = {10.1016/j.neuron.2010.03.001},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Grossmann et al. - 2010 - The Developmental Origins of Voice Processing in the Human Brain.pdf:pdf},
issn = {08966273},
journal = {Neuron},
keywords = {Sysneuro},
number = {6},
pages = {852--858},
publisher = {Elsevier Ltd},
title = {{The Developmental Origins of Voice Processing in the Human Brain}},
url = {http://dx.doi.org/10.1016/j.neuron.2010.03.001},
volume = {65},
year = {2010}
}
@techreport{Zafra,
author = {Zafra, Juli{\'{a}}n},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Zafra - Unknown - Ingenier{\'{i}}a de sonido Conceptos, fundamentos y casos pr{\'{a}}cticos A Think Tank Guide.pdf:pdf},
title = {{Ingenier{\'{i}}a de sonido Conceptos, fundamentos y casos pr{\'{a}}cticos A Think Tank Guide}},
url = {http://www.tecno-libro.es/ficheros/descargas/9788499647432.pdf}
}
@misc{flask-socketio,
abstract = {Flask-SocketIO gives Flask applications access to low latency bi-directional communications between the clients and the server. The client-side application can use any of the SocketIO official clients libraries in Javascript, C++, Java and Swift, or any compatible client to establish a permanent connection to the server.},
author = {Grinberg, Miguel},
title = {{Flask-SocketIO}},
url = {https://flask-socketio.readthedocs.io/en/latest/}
}
@inproceedings{Ahmad2013,
abstract = {Using of Kanban in software development is an emerging topic. This systematic literature review was conducted in order to analyze the current trend of Kanban usage in software development and to identify the obtained benefits and involved challenges. The search strategy resulted in 492 papers, of which 19 were identified as primary studies relevant to our research. The main reported benefits of using the Kanban method were improved lead time to deliver software, improved quality of software, improved communication and coordination, increased consistency of delivery, and decreased customer reported defects. The reported challenges included lack of knowledge and specialized training as well as various organizational issues. Additionally, suggested practices were extracted from the primary studies and summarized for guiding the practitioners interested in adopting Kanban. The findings of this literature review are intended for helping researchers and practitioners to gain a better understanding of the current state of Kanban usage in software development.},
author = {Ahmad, Muhammad Ovais and Markkula, Jouni and Oivo, Markku},
booktitle = {Proceedings - 39th Euromicro Conference Series on Software Engineering and Advanced Applications, SEAA 2013},
doi = {10.1109/SEAA.2013.28},
isbn = {9780769550916},
keywords = {kanban,lean approach,software development,systematic literature review},
month = {sep},
pages = {9--16},
publisher = {IEEE},
title = {{Kanban in software development: A systematic literature review}},
url = {https://ieeexplore.ieee.org/document/6619482/},
year = {2013}
}
@misc{harvest,
title = {{Simple Online Time Tracking Software - Harvest}},
url = {https://www.getharvest.com/ http://www.getharvest.com/},
urldate = {2019-06-19}
}
@article{Lee2003,
abstract = {A description is given of SPHINX an accurate large-vocabulary$\backslash$nspeaker-independent continuous speech recognition system. The authors$\backslash$nhave made several recent enhancements, including generalized triphone$\backslash$nmodels, word duration modeling, function-phrase modeling, between-word$\backslash$ncoarticulation modeling, and corrective training. On the 997-word$\backslash$nresource management task, SPHINX attained a word accuracy of 96{\%} with a$\backslash$ngrammar (perplexity 60), and 82{\%} without grammar (perplexity 997)},
author = {Lee, K.-F. and Hon, H.-W. and Hwang, M.-Y. and Mahajan, S. and Reddy, R.},
doi = {10.1109/icassp.1989.266459},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Lee et al. - 2003 - The SPHINX speech recognition system.pdf:pdf},
pages = {445--448},
title = {{The SPHINX speech recognition system}},
year = {2003}
}
@article{Bhattacharya2014,
abstract = {Operating systems act as fundamentals to the basic computer systems in today's world. An OS is the communication between the software you use and the hardware that lies underneath. Every electronic signal talks with your operating system to understand the work it has to do or the way it has to behave to get the user's work done. In this paper, we discuss about basic operating systems, get an overview of the internal processes associated with an operating system and understand its connection with the kernel and the hardware. We then move on to Virtualization by introducing Vagrant, an operating system virtualization software that allows you to run virtual machines on your system and configure them the way you want to suit your needs, and discuss about virtualization on cloud.},
author = {Bhattacharya, Abhishek and Paul, Shagun and Jaiswal, Arunima},
doi = {10.5120/17804-8622},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Bhattacharya et al. - 2014 - Operating Systems Basic Concepts and Challenges against Virtualization.pdf:pdf},
journal = {International Journal of Computer Applications},
keywords = {Cloud,Operating System,Vagrant,Virtualization},
number = {4},
pages = {26--30},
title = {{Operating Systems: Basic Concepts and Challenges against Virtualization}},
url = {https://s3.amazonaws.com/academia.edu.documents/35528284/Operating{\_}Systems{\_}-{\_}Basic{\_}Concepts{\_}and{\_}Challenges{\_}against{\_}Virtualization.pdf?response-content-disposition=inline{\%}3B filename{\%}3DOperating{\_}Systems{\_}Basic{\_}Concepts{\_}and{\_}Cha.pdf{\&}X-Amz-Algorithm=AWS4-HMAC-},
volume = {102},
year = {2014}
}
@article{MolinaRios2016,
abstract = {Debido a la creciente interacci{\'{o}}n de los usuarios con sistemas web, surge la necesidad de combinar las funcionalidades de aplicaciones cl{\'{a}}sicas de escritorio, con la accesibilidad y bajo costo de la publicaci{\'{o}}n de aplicaciones web; dando origen a la elecci{\'{o}}n del mejor marco de trabajo que se adopte a las necesidades de los desarrolladores. Esta investigaci{\'{o}}n presenta un an{\'{a}}lisis comparativo de los frameworks que trabajan con el lenguaje Python para el desarrollo de aplicaciones web. Para ello el an{\'{a}}lisis se formul{\'{o}} mediante un modelo de evaluaci{\'{o}}n que se basa en las caracter{\'{i}}sticas de calidad propuestas en la norma ISO/IEC 9126. Estas a su vez permiten establecer sub-caracter{\'{i}}sticas, atributos y m{\'{e}}tricas para evaluar la calidad de las aplicaciones web. Permitiendo obtener como resultado una matriz para la Evaluaci{\'{o}}n de Frameworks: Django, Pyramid, Turbogear y Web2PY. Los resultados obtenidos mostraron las fortalezas y debilidades de cada framework y fue la base para determinar que Django es el mejor framework para la implementaci{\'{o}}n de desarrollo de sistemas web. Este framework cumpli{\'{o}} con todos los indicadores del modelo de evaluaci{\'{o}}n, los resultados redactados al final del documento determinan que tomando en cuenta las m{\'{e}}tricas de calidad se puede elegir qu{\'{e}} marco de trabajo es el que mejor se adapta para el desarrollo de aplicaciones web en la Ciudad de Machala. Antes de realizar una evaluaci{\'{o}}n se considera indispensable conocer y comprender el funcionamiento de los elementos que se vaya a cotejar, para ello es recomendable emplear tablas para la comparaci{\'{o}}n de las caracter{\'{i}}sticas, teniendo como referencia sitios web confiables que aporten documentaci{\'{o}}n sobre los frameworks y el empleo de est{\'{a}}ndares de calidad para su determinaci{\'{o}}n.},
author = {{Molina R{\'{i}}os}, Jimmy Rolando and {Loja Mora}, Nancy Magaly and {Zea Ord{\'{o}}{\~{n}}ez}, Mariuxi Paola and {Loaiza Sojos}, Erika Lizbeth},
doi = {10.18294/relais.2016.201-207},
issn = {2314-2642},
journal = {Revista Latinoamericana de Ingenieria de Software},
month = {sep},
number = {4},
pages = {201},
title = {{Evaluaci{\'{o}}n de los Frameworks en el Desarrollo de Aplicaciones Web con Python}},
url = {http://revistas.unla.edu.ar/software/article/view/1149},
volume = {4},
year = {2016}
}
@misc{Currie2015,
abstract = {Presentation from IBM InterConnect 2015 covering the concepts of 12 Factor Apps and Microservices with reference to IBM Bluemix/Cloud Foundry.},
author = {Currie, David},
pages = {42},
title = {{Introduction to Microservices and Cloud Native Application Architecture}},
url = {https://www.slideshare.net/davidcurrie/abo-6012microservicescloudnative},
urldate = {2019-06-15},
year = {2015}
}
@article{ArmashAslam,
abstract = {Web is the most frequently used networking aid which satisfies the requirements of all types of users; it provides a solution for any type of problem definition. While developing a web portal the appearance of web portal makes a development more critical. The good appearance of a web can easily attract more number of visitors which is a success of web portal. For designing and developing such well structured and with the good appearance of web we have to choose a proper technology. The technological needs of satisfying a good web portal can be fulfilled by "python" and "flask".},
author = {F.A., M.A. Aslam and H.N., Mohammed and J.M.M., Munir and Gulamgaus},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Armash Aslam, Nabeel Mohammed Jummal Musab Mohd Munir Murade Aaraf Gulamgaus, Lokhande Assistant Professor - Unknown - Efficient Way Of.pdf:pdf},
journal = {International Journal of Advanced Research in Computer Science},
keywords = {cr-ldp,ldp,mpls,qos parameters,simulation,tcp,udp},
number = {5},
pages = {54--57},
title = {{Efficient Way Of Web Development Using Python And Flask}},
url = {www.ijarcs.info},
volume = {6},
year = {2015}
}
@misc{CMUSphinx,
author = {CMUSphinx},
booktitle = {2019},
title = {{Tuning speech recognition accuracy – CMUSphinx Open Source Speech Recognition}},
url = {https://cmusphinx.github.io/ https://cmusphinx.github.io/wiki/ https://cmusphinx.github.io/wiki/tutorialtuning/},
urldate = {2019-05-27}
}
@article{Hannemann2017,
abstract = {Grapheme-to-phoneme conversion is the task of finding the pronunciation of a word given its written form. It has important applications in text-to-speech and speech recognition. Joint-sequence models are a simple and theoretically stringent probabilistic framework that is applicable to this problem. This article provides a self-contained and detailed description of this method. We present a novel estimation algorithm and demonstrate high accuracy on a variety of databases. Moreover, we study the impact of the maximum approximation in training and transcription, the interaction of model size parameters, n-best list generation, confidence measures, and phoneme-to-grapheme conversion. Our software implementation of the method proposed in this work is available under an Open Source license. {\textcopyright} 2008 Elsevier B.V. All rights reserved.},
author = {Hannemann, Mirko and Trmal, Jan and Ondel, Lucas and Kesiraju, Santosh and Burget, Lukas},
doi = {10.1109/ICASSP.2017.7952674},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Hannemann et al. - 2017 - Bayesian joint-sequence models for grapheme-to-phoneme conversion.pdf:pdf},
isbn = {9781509041176},
issn = {15206149},
journal = {ICASSP, IEEE International Conference on Acoustics, Speech and Signal Processing - Proceedings},
keywords = {Bayesian approach,grapheme-tophoneme conversion,hierarchical Pitman-Yor-Process,joint-sequence models,letter-to-sound,weighted finite state transducers},
pages = {2836--2840},
title = {{Bayesian joint-sequence models for grapheme-to-phoneme conversion}},
volume = {50},
year = {2017}
}
@article{Gartner2018,
abstract = {Widespread artificial intelligence, biohacking, new platforms and immersive experiences dominate this year's Gartner Hype Cycle. Waiting curbside for an Uber or Lyft driver might one day be the old-fashioned way of getting around. Instead, passengers will need to head to the helipad to catch a ride from a flying autonomous vehicle. Not only will these future taxis take to the sky to potentially reduce traffic, they'll operate independently of a human pilot. Realistically, the world (and the technology) aren't quite ready for autonomous flying taxis. The first challenge will be mastering the autonomous technology, which is still at least five to 10 years away. According to a recent test by the Insurance Institute for Highway Safety, today's autonomous vehicle makers Level 2 driver assistance are not capable of driving safely on their own. The production vehicle that can safely drive itself anywhere, anytime isn't available at the local car dealer and won't be for quite some time. Gartner Hype Cycle for Emerging Technologies, 2018 The concept of autonomous flying vehicles isn't just for human passengers but can be applied to transport many other things such as medical supplies, packages, food delivery and more. Companies are actively investigating this technology as a way to deliver same-day packages or regularly send supplies to remote locations without a pilot. These are a real possibility in the next decade. Fully autonomous flying vehicles are an easier problem to solve in some cases than autonomous vehicles on the ground because the airspace is highly controlled and there are fewer variables such as humans. However, while there will be unique regulatory and societal challenges (e.g., where would all the helipads go, and how do we prevent crashes?), flying autonomous vehicles are one of 17 new technologies to join the Gartner Hype Cycle for Emerging Technologies, 2018. The Gartner Hype Cycle focuses on technologies that will deliver a high degree of competitive advantage over the next decade.},
author = {Gartner},
journal = {Gartner},
pages = {1},
title = {{5 Trends Emerge in the Gartner Hype Cycle for Emerging Technologies, 2018 - Smarter With Gartner}},
url = {https://www.gartner.com/smarterwithgartner/5-trends-emerge-in-gartner-hype-cycle-for-emerging-technologies-2018/},
year = {2018}
}
@misc{Rudnicky2010,
author = {Rudnicky, Alex},
title = {{Sphinx Knowledge Base Tool}},
url = {http://www.speech.cs.cmu.edu/tools/lmtool-new.html http://www.speech.cs.cmu.edu/tools/lmtool.html},
urldate = {2019-06-19},
year = {2010}
}
@article{NOVAK2016,
abstract = {This paper provides an analysis of several practical issues related to the theory and implementation of Grapheme-to-Phoneme (G2P) conversion systems utilizing the Weighted Finite-State Transducer paradigm. The paper addresses issues related to system accuracy, training time and practical implementation. The focus is on joint n-gram models which have proven to provide an excellent trade-off between system accuracy and training complexity. The paper argues in favor of simple, productive approaches to G2P, which favor a balance between training time, accuracy and model complexity. The paper also introduces the first instance of using joint sequence RnnLMs directly for G2P conversion, and achieves new state-of-the-art performance via ensemble methods combining RnnLMs and n-gram based models. In addition to detailed descriptions of the approach, minor yet novel implementation solutions, and experimental results, the paper introduces Phonetisaurus , a fully-functional, flexible, open-source, BSD-licensed G2P conversion toolkit, which leverages the OpenFst library. The work is intended to be accessible to a broad range of readers.},
author = {NOVAK, JOSEF ROBERT and MINEMATSU, NOBUAKI and HIROSE, KEIKICHI},
doi = {10.1017/s1351324915000315},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Novak, Minematsu, Hirose - 2015 - Phonetisaurus Exploring grapheme-to-phoneme conversion with joint n-gram models in the WFST framework.pdf:pdf},
issn = {1351-3249},
journal = {Natural Language Engineering},
number = {6},
pages = {907--938},
publisher = {Cambridge University Press},
title = {{Phonetisaurus: Exploring grapheme-to-phoneme conversion with joint n-gram models in the WFST framework}},
url = {https://doi.org/10.1017/S1351324915000315},
volume = {22},
year = {2016}
}
@inproceedings{Bisani2008,
abstract = {Grapheme-to-phoneme conversion is the task of finding the pronunciation of a word given its written form. It has important applications in text-to-speech and speech recognition. Joint-sequence models are a simple and theoretically stringent probabilistic framework that is applicable to this problem. This article provides a self-contained and detailed description of this method. We present a novel estimation algorithm and demonstrate high accuracy on a variety of databases. Moreover, we study the impact of the maximum approximation in training and transcription, the interaction of model size parameters, n-best list generation, confidence measures, and phoneme-to-grapheme conversion. Our software implementation of the method proposed in this work is available under an Open Source license. {\textcopyright} 2008 Elsevier B.V. All rights reserved.},
author = {Hannemann, Mirko and Trmal, Jan and Ondel, Lucas and Kesiraju, Santosh and Burget, Lukas},
booktitle = {ICASSP, IEEE International Conference on Acoustics, Speech and Signal Processing - Proceedings},
doi = {10.1109/ICASSP.2017.7952674},
isbn = {9781509041176},
issn = {15206149},
keywords = {Bayesian approach,grapheme-tophoneme conversion,hierarchical Pitman-Yor-Process,joint-sequence models,letter-to-sound,weighted finite state transducers},
month = {may},
number = {5},
pages = {2836--2840},
publisher = {North-Holland},
title = {{Bayesian joint-sequence models for grapheme-to-phoneme conversion}},
url = {https://www.sciencedirect.com/science/article/abs/pii/S0167639308000046},
volume = {50},
year = {2017}
}
@article{Stolckea,
abstract = {SRILM is a collection of C++ libraries, executable programs, and helper scripts designed to allow both production of and experimentation with statistical language models for speech recognition and other applications. SRILM is freely available for noncommercial purposes. The toolkit supports creation and evaluation of a variety of language model types based on N-gram statistics, as well as several related tasks, such as statistical tagging and manipulation of N-best lists and word lattices. This paper summarizes the functionality of the toolkit and discusses its design and implementation , highlighting ease of rapid prototyping, reusability, and combinability of tools.},
author = {Stolcke, Andreas},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Stolcke - Unknown - SRILM-AN EXTENSIBLE LANGUAGE MODELING TOOLKIT(2).pdf:pdf},
title = {{SRILM}},
url = {http://www.speech.sri.com/}
}
@book{Hashimoto2013,
author = {Hashimoto, Mitchell},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Hashimoto - 2013 - Vagrant Up and Running.pdf:pdf},
isbn = {9781449335830},
title = {{Vagrant: Up and Running}},
url = {http://my.safaribooksonline.com},
year = {2013}
}
@misc{github,
title = {{GitHub}},
url = {https://github.com/},
urldate = {2019-06-16}
}
@misc{Juang2004,
abstract = {Designing a machine that mimics human behavior, particularly the capability of speaking naturally and responding properly to spoken language, has intrigued engineers and scientists for centuries. Since the 1930s, when Homer Dudley of Bell Laboratories proposed a system model for speech analysis and synthesis [1, 2], the problem of automatic speech recognition has been approached progressively, from a simple machine that responds to a small set of sounds to a sophisticated system that responds to fluently spoken natural language and takes into account the varying statistics of the language in which the speech is produced. Based on major advances in statistical modeling of speech in the 1980s, automatic speech recognition systems today find widespread application in tasks that require a human-machine interface, such as automatic call processing in the telephone network and query-based information systems that do things like provide updated travel information, stock price quotations, weather reports, etc. In this article, we review some major highlights in the research and development of automatic speech recognition during the last few decades so as to provide a technological perspective and an appreciation of the fundamental progress that has been made in this important area of information and communication technology.},
author = {Juang, B H and Rabiner, Lawrence R},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Juang, Rabiner - 2004 - Automatic Speech Recognition-A Brief History of the Technology Development.pdf:pdf},
keywords = {Speech recognition,acoustic modeling,automatic transcription,dialog systems,finite state network,hidden Markov models,keyword spotting,language modeling,neural networks,office automation,pattern recognition,spectral analysis,speech understanding,statistical modeling,time normalization},
title = {{Automatic Speech Recognition – A Brief History of the Technology Development - Juang, Rabiner - Unknown.pdf}},
url = {http://www.recording-history.org/},
year = {2004}
}
@article{NOVAK2016a,
abstract = {This paper provides an analysis of several practical issues related to the theory and implementation of Grapheme-to-Phoneme (G2P) conversion systems utilizing the Weighted Finite-State Transducer paradigm. The paper addresses issues related to system accuracy, training time and practical implementation. The focus is on joint n-gram models which have proven to provide an excellent trade-off between system accuracy and training complexity. The paper argues in favor of simple, productive approaches to G2P, which favor a balance between training time, accuracy and model complexity. The paper also introduces the first instance of using joint sequence RnnLMs directly for G2P conversion, and achieves new state-of-the-art performance via ensemble methods combining RnnLMs and n-gram based models. In addition to detailed descriptions of the approach, minor yet novel implementation solutions, and experimental results, the paper introduces Phonetisaurus , a fully-functional, flexible, open-source, BSD-licensed G2P conversion toolkit, which leverages the OpenFst library. The work is intended to be accessible to a broad range of readers.},
author = {NOVAK, JOSEF ROBERT and MINEMATSU, NOBUAKI and HIROSE, KEIKICHI},
doi = {10.1017/s1351324915000315},
issn = {1351-3249},
journal = {Natural Language Engineering},
month = {nov},
number = {6},
pages = {907--938},
publisher = {Cambridge University Press},
title = {{Phonetisaurus: Exploring grapheme-to-phoneme conversion with joint n-gram models in the WFST framework}},
url = {https://www.cambridge.org/core/product/identifier/S1351324915000315/type/journal{\_}article},
volume = {22},
year = {2016}
}
@misc{IBM2019,
abstract = {Convert audio and voice into written text for quick understanding of content.},
author = {IBM},
title = {{Watson Speech to Text}},
url = {https://www.ibm.com/watson/services/speech-to-text/?lnk=hm https://www.ibm.com/watson/services/speech-to-text/},
urldate = {2019-06-14},
year = {2019}
}
@techreport{Walker2004,
author = {Walker, Willie and Lamere, Paul and Kwok, Philip and Raj, Bhiksha and Singh, Rita and Gouvea, Evandro and Wolf, Peter and Woelfel, Joe},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Walker et al. - 2004 - Sphinx-4 A Flexible Open Source Framework for Speech Recognition.pdf:pdf},
keywords = {HMM,Sun Labs,Sun Microsystems Laboratories,hidden Markov model,speech recognition},
title = {{Sphinx-4: A Flexible Open Source Framework for Speech Recognition}},
url = {http://research.sun.com/techrep/.},
year = {2004}
}
@misc{Microsoft,
abstract = {onvert spoken audio to text. Call the API to recognize audio coming from the microphone, from other real-time streaming audio sources, or from a recorded audio file. As audio is sent to the server, partial recognition results are returned if requested.},
author = {Microsoft},
title = {{Speech to Text API | Microsoft Azure}},
url = {https://azure.microsoft.com/es-es/services/cognitive-services/speech-to-text/ https://azure.microsoft.com/en-us/services/cognitive-services/speech-to-text/},
urldate = {2019-06-14}
}
@techreport{Sanfeliu,
author = {Sanfeliu, Alberto and Ruiz-Shulcloper, Jos{\'{e}}},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Sanfeliu, Ruiz-Shulcloper - Unknown - LNCS 2905 - Progress in Pattern Recognition, Speech and Image Analysis.pdf:pdf},
title = {{LNCS 2905 - Progress in Pattern Recognition, Speech and Image Analysis}}
}
@misc{RealAcademiaEspanola2005,
author = {{Real Academia Espa{\~{n}}ola}},
booktitle = {Diccionario panhisp{\'{a}}nico de dudas},
title = {{Diferencia entre Espa{\~{n}}ol y Castellano}},
url = {http://lema.rae.es/dpd/srv/search?key=espa{\%}F1ol},
urldate = {2019-06-03},
year = {2005}
}
@article{Anderson2015,
abstract = {An15},
author = {Anderson, Charles},
doi = {10.1109/MS.2015.62},
file = {:Users/pablomaciasmunoz/Downloads/07093032.pdf:pdf},
issn = {07407459},
journal = {IEEE Software},
keywords = {Docker,Docker containers,James Turnbull,SE Radio,Software Engineering Radio,microservices},
number = {3},
pages = {102--105},
publisher = {IEEE},
title = {{Docker}},
volume = {32},
year = {2015}
}
@article{Tellez2006,
abstract = {Remote object management is a key element in distributed and collaborative information retrieval, peer-to-peer systems and agent oriented programming. In existing implementations the communication and parsing overhead represents a significant fraction of the overall latency time in information retrieval tasks. Furthermore, existing architectures are composed of several software layers with potential version conflicts. In this paper, we present SPyRO (Simple Python Remote Objects) which is a Python Remote Object Management System developed to provide transparent and translucent remote object access. The transparent mode is designed to create easily distributed applications supporting code mobility [5]  in Python programming language, whilst the translucent mode is designed to provide total control over remote calls, and allow access from other programming languages. To lower the communication latency, the connection is stateless, local objects and remote calls are not aware of the connection state. The protocol uses several marshal format s to communicate between peers, trying to maximize the homogeneity in a heterogeneous network. To support our claims we present results showing performance improvements of about 10 times when comparing with state of the art marshalling formats based on XML. {\textcopyright} 2006 IEEE.},
author = {T{\'{e}}llez, Eric Sadit and Ch{\'{a}}vez, Edgar and Contreras-Castillo, Juan},
doi = {10.1109/LA-WEB.2006.34},
file = {:Users/pablomaciasmunoz/Downloads/SPyRO{\_}Simple{\_}Python{\_}Remote{\_}Objects.pdf:pdf},
isbn = {0769526934},
journal = {Proceedings - LA-Web 06: Fourth Latin American Web Congress},
number = {October},
pages = {39--46},
title = {{SPyRO: Simple python remote objects}},
year = {2006}
}
@article{Huang2014,
abstract = {What do we know now that we did not know 40 years ago?},
author = {Huang, Xuedong and Baker, James and Reddy, Raj},
doi = {10.1145/2500887},
issn = {00010782},
journal = {Communications of the ACM},
month = {jan},
number = {1},
pages = {94--103},
title = {{A historical perspective of speech recognition}},
url = {http://dl.acm.org/citation.cfm?doid=2541883.2500887},
volume = {57},
year = {2014}
}
@inproceedings{Deleglise2009,
abstract = {This paper describes the new ASR system developed by the LIUM and analyzes the various origins of the significant drop of the word error rate observed in comparison to the previous LIUM ASR system. This study was made on the test data of the latest evaluation campaign of ASR systems on French broadcast news, called ESTER 2 and organized in December 2008. For the same computation time, the new system yields a word error rate about 38{\%} lower than what the previous system (which reached the second position during the ESTER 1 evaluation campaign) did. This paper evaluates the gain provided by various changes to the system: implementation of new search and training algorithms, new training data, vocabulary size, etc. The LIUM ASR system was the best open-source ASR system of the ESTER 2 campaign. Copyright {\textcopyright} 2009 ISCA.},
author = {Del{\'{e}}glise, Paul and Est{\`{e}}ve, Yannick and Meignier, Sylvain and Merlin, Teva},
booktitle = {Proceedings of the Annual Conference of the International Speech Communication Association, INTERSPEECH},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Del{\'{e}}glise et al. - 2009 - Improvements to the LIUM French ASR system based on CMU Sphinx What helps to significantly reduce the word er.pdf:pdf},
issn = {19909772},
keywords = {Acoustic model,Automatic speech recognition system,Evaluation,Language modeling},
pages = {2123--2126},
title = {{Improvements to the LIUM French ASR system based on CMU Sphinx: What helps to significantly reduce the word error rate?}},
year = {2009}
}
@article{Lamere2003,
abstract = {The Sphinx-4 speech recognition system is the latest addition to Carnegie Mellon University's repository of Sphinx speech recognition systems. It has been jointly designed by Carnegie Mellon University, Sun Microsystems Laboratories and Mitsubishi Electric Research Laboratories. It is differently designed from the earlier Sphinx systems in terms of modularity, flexibility and algorithmic aspects. It uses newer search strategies, is universal in its acceptance of various kinds of grammars and language models, types of acoustic models and feature streams. Algorithmic innovations included in the system design enable it to incorporate multiple information sources in an elegant manner. The system is entirely developed on the Java™ platform and is highly portable, flexible, and easier to use with multithreading. This paper describes the salient features of the Sphinx-4 decoder and includes preliminary performance measures relating to speed and accuracy.},
author = {Lamere, Paul and Kwok, Philip and Gouvea, Evandro and Raj, Bhiksha and Singh, Rita and Walker, William and Warmuth, Manfred and Wolf, Peter},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Lamere et al. - Unknown - The CMU Sphinx-4 Speech Recognition System.pdf:pdf},
isbn = {0-7803-7663-3},
journal = {IEEE Intl. Conf. on Acoustics, Speech and Signal Processing (ICASSP 2003), Hong Kong},
pages = {2--5},
title = {{The CMU SPHINX-4 speech recognition system}},
url = {https://pdfs.semanticscholar.org/5064/c602c3a57f4e6f1e4c8f8fb137384c5d41a7.pdf},
volume = {1},
year = {2003}
}
@book{Hochstein2014,
abstract = {Among the many configuration management tools available, Ansible has some distinct advantages—it's minimal in nature, you don't need to install anything on your nodes, and it has an easy learning curve. This practical guide shows you how to be productive with this tool quickly, whether you're a developer deploying code to production or a system administrator looking for a better automation solution.},
author = {Hochstein, Lorin.},
isbn = {9781491915325},
pages = {334},
publisher = {O'Reilly Media},
title = {{Ansible Up and Running : AUTOMATING CONFIGURATION MANAGEMENT AND DEPLOYMENT THE EASY WAY}},
url = {https://books.google.es/books?hl=es{\&}lr={\&}id=h5YtDwAAQBAJ{\&}oi=fnd{\&}pg=PP1{\&}dq=ansible{\&}ots=MJr93kRXXV{\&}sig=A0sojEvYoJxpW{\_}h0E5YreGlgQ{\_}s{\#}v=onepage{\&}q=ansible{\&}f=false},
year = {2014}
}
@article{Uber2018,
author = {Uber, Release and Labs, A I},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Uber, Labs - 2018 - Pyro Documentation.pdf:pdf},
title = {{Pyro Documentation}},
year = {2018}
}
@article{Stolcke2002,
abstract = {SRILM is a collection of C++ libraries, executable programs, and helper scripts designed to allow both production of and experimentation with statistical language models for speech recognition and other applications. SRILM is freely available for noncommercial purposes. The toolkit supports creation and evaluation of a variety of language model types based on N-gram statistics, as well as several related tasks, such as statistical tagging and manipulation of N-best lists and word lattices. This paper summarizes the functionality of the toolkit and discusses its design and implementation, highlighting ease of rapid prototyping, reusability, and combinability of tools.},
author = {Stolcke, Andreas},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Stolcke - Unknown - SRILM-AN EXTENSIBLE LANGUAGE MODELING TOOLKIT(2).pdf:pdf},
journal = {Proceedings of the 7th International Conference on Spoken Language Processing},
pages = {901--904},
title = {{SRILM - An extensible language modeling toolkit}},
url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.157.2429},
year = {2002}
}
@article{Giannakopoulos2015,
abstract = {Audio information plays a rather important role in the increasing digital content that is available today, resulting in a need for methodologies that automatically analyze such content: audio event recognition for home automations and surveillance systems, speech recognition, music information retrieval, multimodal analysis (e.g. audio-visual analysis of online videos for content-based recommendation), etc. This paper presents pyAudioAnalysis, an open-source Python library that provides a wide range of audio analysis procedures including: feature extraction, classification of audio signals, supervised and unsupervised segmentation and content visualization. pyAudioAnalysis is licensed under the Apache License and is available at GitHub (https://github.com/tyiannak/pyAudioAnalysis/). Here we present the theoretical background behind the wide range of the implemented methodologies, along with evaluation metrics for some of the methods. pyAudioAnalysis has been already used in several audio analysis research applications: smart-home functionalities through audio event detection, speech emotion recognition, depression classification based on audio-visual features, music segmentation, multimodal content-based movie recommendation and health applications (e.g. monitoring eating habits). The feedback provided from all these particular audio applications has led to practical enhancement of the library.},
author = {Giannakopoulos, Theodoros},
doi = {10.1371/journal.pone.0144610},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Giannakopoulos - 2015 - pyAudioAnalysis An Open-Source Python Library for Audio Signal Analysis.pdf:pdf},
issn = {19326203},
journal = {PLoS ONE},
number = {12},
title = {{PyAudioAnalysis: An open-source python library for audio signal analysis}},
url = {https://github.com/tyiannak/pyAudioAnalysis/},
volume = {10},
year = {2015}
}
@article{Lamere2003a,
abstract = {The Sphinx-4 speech recognition system is the latest addition to Carnegie Mellon University's repository of Sphinx speech recognition systems. It has been jointly designed by Carnegie Mellon University, Sun Microsystems Laboratories and Mitsubishi Electric Research Laboratories. It is differently designed from the earlier Sphinx systems in terms of modularity, flexibility and algorithmic aspects. It uses newer search strategies, is universal in its acceptance of various kinds of grammars and language models, types of acoustic models and feature streams. Algorithmic innovations included in the system design enable it to incorporate multiple information sources in an elegant manner. The system is entirely developed on the Java™ platform and is highly portable, flexible, and easier to use with multithreading. This paper describes the salient features of the Sphinx-4 decoder and includes preliminary performance measures relating to speed and accuracy.},
author = {Lamere, Paul and Kwok, Philip and Gouvea, Evandro and Raj, Bhiksha and Singh, Rita and Walker, William and Warmuth, Manfred and Wolf, Peter},
file = {:Users/pablomaciasmunoz/Downloads/c602c3a57f4e6f1e4c8f8fb137384c5d41a7.pdf:pdf},
isbn = {0-7803-7663-3},
journal = {IEEE Intl. Conf. on Acoustics, Speech and Signal Processing (ICASSP 2003), Hong Kong},
pages = {2--5},
title = {{The CMU SPHINX-4 speech recognition system}},
url = {https://pdfs.semanticscholar.org/5064/c602c3a57f4e6f1e4c8f8fb137384c5d41a7.pdf},
volume = {1},
year = {2003}
}
@book{Hourieh2008,
abstract = {Title from title screen. Includes index. "This book will show you how to assemble Django's features and leverage its power to design, develop, and deploy a fully-featured website. It will walk you through the creation of an example web application, with lots of code. Each chapter will add new features to the site, and show what parts of Django to work on to build these features. This book has been specifically written for Python developers new to Django, and it's goal is to help you put together Django applications as quickly as possible. This book will give you clear, concise and, of course, practical guidance to take you from the basics of creating pages with Django through to learning the skills that will make you a Django developer to be reckoned with"--Resource description page.},
author = {Hourieh, Ayman. and Basu, Susmita.},
isbn = {9781847193353},
pages = {249},
publisher = {Packt Pub},
title = {{Learning website development with Django : a beginner's tutorial to building web applications, quickly and cleanly, with the Django application framework}},
url = {https://books.google.es/books?hl=es{\&}lr={\&}id=kQXSAQAAQBAJ{\&}oi=fnd{\&}pg=PT8{\&}dq=python+django{\&}ots=llepLOPzrP{\&}sig=f0u2dGZ-OBF3VfllAN{\_}iirGgIQM{\#}v=onepage{\&}q=python django{\&}f=false},
year = {2008}
}
@book{Somasundaram2013,
abstract = {Git – is free software which enables you to maintain different versions of single or multiple files present inside a directory(folder), and allows you to switch back and forth between them at any given point of time. It also allows multiple people to work on the same file collaboratively or in parallel, without being connected to a server or any other centralized system continuously. This book is a step by step, practical guide, helping you learn the routine of version controlling all your content, every day. If you are an average computer user who wants to be able to maintain multiple versions of files and folders, or to go back and forth in time with respect to the files content – look no further. The workflow explained in this book will benefit anyone, no matter what kind of text or documentation they work on. This book will also benefit developers, administrators, analysts, architects and anyone else who wishes to perform simultaneous, collaborative work, or work in parallel on the same set of files. Git's advanced features are there to make your life easier.},
author = {Somasundaram, Ravishankar.},
isbn = {978-1-84951-752-2},
pages = {180},
publisher = {Packt Publishing},
title = {{Git: Version control for everyone. The non-coder's guide to everyday version control for increased efficiency and productivity}},
url = {https://books.google.es/books?hl=es{\&}lr={\&}id=mD0YT2dcFQkC{\&}oi=fnd{\&}pg=PT11{\&}dq=git+version+control{\&}ots={\_}5lYN1GWh-{\&}sig=Ld2ZqlIGvFpqcPP{\_}bbnP1d7lUpY{\#}v=onepage{\&}q=git version control{\&}f=false https://www.packtpub.com/application-development/git-version-control-every},
year = {2013}
}
@article{Stolcke,
abstract = {SRILM is a collection of C++ libraries, executable programs, and helper scripts designed to allow both production of and experimentation with statistical language models for speech recognition and other applications. SRILM is freely available for noncommercial purposes. The toolkit supports creation and evaluation of a variety of language model types based on N-gram statistics, as well as several related tasks, such as statistical tagging and manipulation of N-best lists and word lattices. This paper summarizes the functionality of the toolkit and discusses its design and implementation , highlighting ease of rapid prototyping, reusability, and combinability of tools.},
author = {Stolcke, Andreas},
file = {:Users/pablomaciasmunoz/Library/Application Support/Mendeley Desktop/Downloaded/Stolcke - Unknown - SRILM-AN EXTENSIBLE LANGUAGE MODELING TOOLKIT(2).pdf:pdf},
title = {{SRILM}},
url = {http://www.speech.sri.com/}
}
@misc{apigoogle,
title = {{Cloud Speech-to-Text | Google Cloud}},
url = {https://cloud.google.com/speech-to-text/?hl=es},
urldate = {2019-06-14}
}
